from pydantic import BaseModel, EmailStr
from typing import Optional
from datetime import datetime
from .models import RoleEnum, ContractStatus

# -------------------
# USERS
# -------------------
class UserBase(BaseModel):
    email: EmailStr
    role: RoleEnum

class UserCreate(UserBase):
    password: str

class UserUpdate(BaseModel):
    email: Optional[EmailStr] = None
    password: Optional[str] = None

class UserResponse(UserBase):
    id: int
    class Config:
        orm_mode = True

# -------------------
# SERVICES
# -------------------
class ServiceBase(BaseModel):
    title: str
    description: str

class ServiceCreate(ServiceBase):
    pass

class ServiceResponse(ServiceBase):
    id: int
    owner_id: int
    class Config:
        orm_mode = True

# -------------------
# CONTRACTS
# -------------------
class ContractBase(BaseModel):
    service_id: int

class ContractCreate(ContractBase):
    freelancer_id: int

class ContractUpdateStatus(BaseModel):
    status: ContractStatus

class ContractReview(BaseModel):
    rating: float  # 1 a 5
    review: Optional[str] = None

class ContractResponse(BaseModel):
    id: int
    client_id: int
    freelancer_id: int
    service_id: int
    status: ContractStatus
    rating: Optional[float] = None
    review: Optional[str] = None
    created_at: datetime
    class Config:
        orm_mode = True

# -------------------
# MESSAGES
# -------------------
class MessageBase(BaseModel):
    text: str

class MessageCreate(MessageBase):
    contract_id: int

class MessageResponse(MessageBase):
    id: int
    contract_id: int
    sender_id: int
    created_at: datetime
    class Config:
        orm_mode = True
