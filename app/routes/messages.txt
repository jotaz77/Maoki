from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from typing import List
from .. import schemas, crud, models, database, auth

router = APIRouter(prefix="/messages", tags=["messages"])

@router.post("/", response_model=schemas.MessageResponse)
def send_message(message: schemas.MessageCreate, db: Session = Depends(database.get_db), current_user: models.User = Depends(auth.get_current_user)):
    contract = crud.get_contract(db, message.contract_id)
    if not contract:
        raise HTTPException(status_code=404, detail="Contrato n達o encontrado")
    if current_user.id != contract.client_id and current_user.id != contract.freelancer_id:
        raise HTTPException(status_code=403, detail="N達o autorizado a enviar mensagens neste contrato")
    return crud.create_message(db, sender_id=current_user.id, message=message)

@router.get("/{contract_id}", response_model=List[schemas.MessageResponse])
def get_messages(contract_id: int, db: Session = Depends(database.get_db), current_user: models.User = Depends(auth.get_current_user)):
    contract = crud.get_contract(db, contract_id)
    if not contract:
        raise HTTPException(status_code=404, detail="Contrato n達o encontrado")
    if current_user.id != contract.client_id and current_user.id != contract.freelancer_id:
        raise HTTPException(status_code=403, detail="N達o autorizado a ver mensagens neste contrato")
    return crud.get_messages_by_contract(db, contract_id)
